#!/usr/bin/env bash

##########################################
# Created by Afiniel for Yiimpool use
# 
# This script configures OpenLiteSpeed
# for YiiMP cryptocurrency mining pool.
# It sets up rewrite rules, security headers,
# and other necessary configurations for
# YiiMP to work properly with OpenLiteSpeed.
# 
# Author: Afiniel
# Date: 2025-01-30
##########################################

# Load configuration files
source /etc/functions.sh
source /etc/yiimpool.conf
source $STORAGE_ROOT/yiimp/.yiimp.conf
source $HOME/Yiimpoolv1/yiimp_single/.wireguard.install.cnf

# Load WireGuard configuration if enabled
if [[ ("$wireguard" == "true") ]]; then
    source $STORAGE_ROOT/yiimp/.wireguard.conf
fi

# Set error handling
set -eu -o pipefail

function print_error {
    read line file <<<$(caller)
    echo "An error occurred in line $line of file $file:" >&2
    sed "${line}q;d" "$file" >&2
}
trap print_error ERR

term_art

print_header "OpenLiteSpeed Configuration for YiiMP"

# Verify OpenLiteSpeed is running
if ! systemctl is-active --quiet lsws; then
    print_warning "OpenLiteSpeed is not running. Please start it first."
    print_info "You can start it with: sudo systemctl start lsws"
    exit 1
fi

print_status "Configuring OpenLiteSpeed for YiiMP..."

# Create .htaccess file for YiiMP URL rewriting
print_status "Creating .htaccess file for YiiMP..."

cat > ${AAPANEL_SITE_ROOT}/.htaccess << 'EOF'
# YiiMP OpenLiteSpeed Configuration
# Generated by Yiimpoolv1 installer

RewriteEngine On

# YiiMP URL rewriting - main rewrite rule for YiiMP framework
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ index.php?r=$1 [QSA,L]

# Security headers (if not set in OpenLiteSpeed virtual host)
<IfModule mod_headers.c>
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set X-Content-Type-Options "nosniff"
    Header always set Referrer-Policy "no-referrer-when-downgrade"
    Header always set Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'"
    
    # HSTS header for SSL sites
    <If "%{HTTPS} == 'on'">
        Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    </If>
</IfModule>

# Block access to sensitive files and directories
<Files ~ "^\.">
    Require all denied
</Files>

<Files ~ "\.sh$">
    Require all denied
</Files>

<Files ~ "\.conf$">
    Require all denied
</Files>

<Files ~ "\.log$">
    Require all denied
</Files>

# Block access to YiiMP configuration files
<Files "serverconfig.php">
    Require all denied
</Files>

# Block access to backup files
<FilesMatch "\.(bak|backup|old|orig|save|swp|tmp)$">
    Require all denied
</FilesMatch>

# Prevent access to version control directories
<DirectoryMatch "\.git">
    Require all denied
</DirectoryMatch>

<DirectoryMatch "\.svn">
    Require all denied
</DirectoryMatch>

# Cache static assets
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType image/jpg "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/ico "access plus 1 month"
    ExpiresByType image/icon "access plus 1 month"
    ExpiresByType text/ico "access plus 1 month"
    ExpiresByType application/ico "access plus 1 month"
</IfModule>

# Gzip compression
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
</IfModule>

# Prevent hotlinking
<IfModule mod_rewrite.c>
    RewriteCond %{HTTP_REFERER} !^$
    RewriteCond %{HTTP_REFERER} !^https?://(www\.)?${DomainName} [NC]
    RewriteRule \.(gif|jpg|jpeg|png|bmp)$ - [F,NC]
</IfModule>
EOF

print_success ".htaccess file created"

# Set proper permissions
print_status "Setting file permissions..."
sudo chown -R nobody:nogroup ${AAPANEL_SITE_ROOT}
sudo chmod -R 755 ${AAPANEL_SITE_ROOT}
sudo chmod 644 ${AAPANEL_SITE_ROOT}/.htaccess

# Ensure log directory is writable
sudo mkdir -p $STORAGE_ROOT/yiimp/site/log
sudo chown -R nobody:nogroup $STORAGE_ROOT/yiimp/site/log
sudo chmod -R 755 $STORAGE_ROOT/yiimp/site/log

print_success "File permissions set"

# Create OpenLiteSpeed-specific PHP configuration if needed
print_status "Checking PHP configuration..."

# Check if we need to create a custom PHP configuration
if [[ "${WEB_SERVER_TYPE}" == "openlitespeed" ]]; then
    print_info "OpenLiteSpeed detected - checking PHP configuration"
    
    # Check if PHP is properly configured for OpenLiteSpeed
    PHP_BINARY="/usr/local/lsws/lsphp${PHP_VERSION//.}/bin/php"
    if [ -f "$PHP_BINARY" ]; then
        print_success "OpenLiteSpeed PHP ${PHP_VERSION} found at $PHP_BINARY"
        
        # Create symlink for compatibility
        sudo ln -sf $PHP_BINARY /usr/bin/php
        print_success "PHP symlink created for compatibility"
    else
        print_warning "OpenLiteSpeed PHP ${PHP_VERSION} not found at expected location"
        print_info "Please ensure PHP ${PHP_VERSION} is installed via aaPanel"
    fi
fi

# Create robots.txt if it doesn't exist
if [ ! -f "${AAPANEL_SITE_ROOT}/robots.txt" ]; then
    print_status "Creating robots.txt..."
    cat > ${AAPANEL_SITE_ROOT}/robots.txt << EOF
User-agent: *
Allow: /

# Allow access to CSS and JS files
Allow: /css/
Allow: /js/
Allow: /images/

# Disallow admin areas
Disallow: /site/admin/
Disallow: /yaamp/

# Sitemap
Sitemap: https://${DomainName}/sitemap.xml
EOF
    print_success "robots.txt created"
fi

print_header "OpenLiteSpeed Configuration Summary"
print_info "Web Server: OpenLiteSpeed"
print_info "PHP Version: ${PHP_VERSION}"
print_info "Site Root: ${AAPANEL_SITE_ROOT}"
print_info "Domain: ${DomainName}"

print_success "OpenLiteSpeed configuration completed successfully"

print_divider
print_info "Next steps:"
print_info "1. Configure SSL certificate in aaPanel:"
print_info "   - Go to Website > SSL in aaPanel"
print_info "   - Select your domain: ${DomainName}"
print_info "   - Choose Let's Encrypt for free SSL or upload your certificate"
print_info "   - Enable 'Force HTTPS' for security"
print_info "2. Verify your site is accessible at https://${DomainName}"
print_info "3. Check OpenLiteSpeed admin panel for any configuration issues"
print_info "4. Monitor OpenLiteSpeed error logs if needed"
print_info "5. Continue with YiiMP installation"

print_header "aaPanel SSL Configuration Guide"
print_info "aaPanel provides easy SSL management:"
print_info "• Automatic Let's Encrypt certificate renewal"
print_info "• Support for custom SSL certificates"
print_info "• One-click HTTPS enforcement"
print_info "• SSL certificate monitoring and alerts"

set +eu +o pipefail
cd $HOME/Yiimpoolv1/yiimp_single
